// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Data;

#nullable disable

namespace ProductManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240812184208_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PRO")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagement.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<decimal?>("TotalOrderPrice")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TotalOrderQty")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers", "PRO");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Panthapath, Dhaka",
                            CustomerName = "Md. Monir Hossen",
                            OrderNo = "ORDER00001",
                            Phone = "01800000000",
                            TotalOrderPrice = 3700m,
                            TotalOrderQty = 18
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Mohammadpur, Dhaka",
                            CustomerName = "Md. Rakib Hasan",
                            OrderNo = "ORDER00002",
                            Phone = "01600000000",
                            TotalOrderPrice = 25m,
                            TotalOrderQty = 5
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Mirpur, Dhaka",
                            CustomerName = "Md. Rokon Islam",
                            OrderNo = "ORDER00003",
                            Phone = "01700000000",
                            TotalOrderPrice = 110m,
                            TotalOrderQty = 4
                        });
                });

            modelBuilder.Entity("ProductManagement.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitPrice")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Products", "PRO");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CustomerId = 1,
                            ProductName = "Book",
                            Quantity = "5",
                            TotalPrice = 500m,
                            UnitPrice = 100m
                        },
                        new
                        {
                            ProductId = 2,
                            CustomerId = 1,
                            ProductName = "Pen",
                            Quantity = "10",
                            TotalPrice = 200m,
                            UnitPrice = 20m
                        },
                        new
                        {
                            ProductId = 3,
                            CustomerId = 1,
                            ProductName = "Calculator",
                            Quantity = "3",
                            TotalPrice = 3000m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            ProductId = 4,
                            CustomerId = 2,
                            ProductName = "Sharpner",
                            Quantity = "2",
                            TotalPrice = 10m,
                            UnitPrice = 5m
                        },
                        new
                        {
                            ProductId = 5,
                            CustomerId = 2,
                            ProductName = "Eraser",
                            Quantity = "3",
                            TotalPrice = 15m,
                            UnitPrice = 5m
                        },
                        new
                        {
                            ProductId = 6,
                            CustomerId = 3,
                            ProductName = "Pencil",
                            Quantity = "2",
                            TotalPrice = 10m,
                            UnitPrice = 5m
                        },
                        new
                        {
                            ProductId = 7,
                            CustomerId = 3,
                            ProductName = "Marker",
                            Quantity = "2",
                            TotalPrice = 100m,
                            UnitPrice = 50m
                        });
                });

            modelBuilder.Entity("ProductManagement.Models.Product", b =>
                {
                    b.HasOne("ProductManagement.Models.Customer", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProductManagement.Models.Customer", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
